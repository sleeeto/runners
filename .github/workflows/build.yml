name: Build

on:
  push:
    branches: ["master"]
    tags: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ECR_REGISTRY: public.ecr.aws/sider
    strategy:
      fail-fast: false
      matrix:
        analyzer:
          - actionlint
          - brakeman
          - checkstyle
          - clang_tidy
          - code_sniffer
          - coffeelint
          - cppcheck
          - cpplint
          - detekt
          - eslint
          - flake8
          - fxcop
          - golangci_lint
          - goodcheck
          - hadolint
          - haml_lint
          - javasee
          - jshint
          - ktlint
          - languagetool
          - metrics_codeclone
          - metrics_complexity
          - misspell
          - metrics_fileinfo
          - phinder
          - phpmd
          - pmd_cpd
          - pmd_java
          - pylint
          - querly
          - reek
          - remark_lint
          - rubocop
          - scss_lint
          - secret_scan
          - shellcheck
          - slim_lint
          - stylelint
          - swiftlint
          - tyscan
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Define variables
        id: define_vars
        # See https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
        shell: bash
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          tag="${GITHUB_REF#refs/*/}"
          tag="${tag///}"
          echo "::set-output name=tag::${tag}"
          if [[ $tag == 'master' ]] || [[ $GITHUB_REF == refs/tags/* ]]; then
            echo '::set-output name=publish::true'
          else
            echo '::set-output name=publish::false'
          fi
      - name: Print variables
        run: echo tag=${{ steps.define_vars.outputs.tag }} publish=${{ steps.define_vars.outputs.publish }}
      - name: Build Docker image
        run: bundle exec rake dockerfile:generate dockerfile:verify docker:build
        env:
          ANALYZER: ${{ matrix.analyzer }}
          TAG: ${{ steps.define_vars.outputs.tag }}
      - name: Run smoke test
        run: bundle exec rake docker:smoke
        env:
          ANALYZER: ${{ matrix.analyzer }}
          TAG: ${{ steps.define_vars.outputs.tag }}
          DEBUG: true
          RUNNERS_TIMEOUT: 3m
      - name: Login to Docker Hub
        if: ${{ steps.define_vars.outputs.publish == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to Amazon ECR Public
        if: ${{ steps.define_vars.outputs.publish == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1
      - name: Publish Docker image
        if: ${{ steps.define_vars.outputs.publish == 'true' }}
        run: |
          bundle exec rake docker:push

          echo 'Publish to Amazon ECR Public ...'
          bundle exec rake docker:tag REGISTRY_NEW="${AWS_ECR_REGISTRY}"
          bundle exec rake docker:push REGISTRY="${AWS_ECR_REGISTRY}"
        env:
          ANALYZER: ${{ matrix.analyzer }}
          TAG: ${{ steps.define_vars.outputs.tag }}
      - name: Publish Docker image as latest
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          bundle exec rake docker:tag TAG_NEW=latest
          bundle exec rake docker:push TAG=latest

          echo 'Publish to Amazon ECR Public ...'
          bundle exec rake docker:tag TAG_NEW=latest REGISTRY_NEW="${AWS_ECR_REGISTRY}"
          bundle exec rake docker:push TAG=latest REGISTRY="${AWS_ECR_REGISTRY}"
        env:
          ANALYZER: ${{ matrix.analyzer }}
          TAG: ${{ steps.define_vars.outputs.tag }}
